<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.mapper.AsqChatMapper">

    <resultMap type="AsqChat" id="AsqChatResult">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="nickName" column="nick_name"/>
        <result property="avatar" column="avatar"/>
        <result property="fromId" column="from_id"/>
        <result property="content" column="content"/>
        <result property="time" column="time"/>
    </resultMap>

    <sql id="selectAsqChatVo">
        select id, user_id, from_id, content, time
        from asq_chat
    </sql>

    <select id="selectAsqChatList" parameterType="AsqChat" resultMap="AsqChatResult">
        <include refid="selectAsqChatVo"/>
        <where>
            <if test="userId != null ">and user_id = #{userId}</if>
            <if test="fromId != null ">and from_id = #{fromId}</if>
            <if test="content != null  and content != ''">and content = #{content}</if>
            <if test="time != null ">and time = #{time}</if>
        </where>
    </select>

    <select id="selectAsqChatById" parameterType="Long" resultMap="AsqChatResult">
        <include refid="selectAsqChatVo"/>
        where id = #{id}
    </select>

    <select id="selectAsqChatListByUserId" resultMap="AsqChatResult" parameterType="Long">
        SELECT asqc.user_id,
               su.nick_name,
               su.avatar,
               asqc.from_id,
               asqc.content,
               asqc.time
        FROM asq_chat asqc
                 LEFT JOIN sys_user su ON asqc.user_id = su.user_id
        WHERE asqc.from_id = #{userId}
          AND asqc.time = (
            SELECT MAX(time)
            FROM asq_chat
            WHERE user_id = asqc.user_id
              AND from_id = #{userId}
        )
        ORDER BY time DESC
    </select>

    <select id="selectChatRecordsByUserId" resultMap="AsqChatResult" parameterType="Long">
        SELECT *
        FROM asq_chat
        WHERE (user_id = #{userId} AND from_id = #{fromId})
           OR (user_id = #{fromId} AND from_id = #{userId})
    </select>

    <insert id="insertAsqChat" parameterType="AsqChat" useGeneratedKeys="true" keyProperty="id">
        insert into asq_chat
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="fromId != null">from_id,</if>
            <if test="content != null">content,</if>
            <if test="time != null">time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="fromId != null">#{fromId},</if>
            <if test="content != null">#{content},</if>
            <if test="time != null">#{time},</if>
        </trim>
    </insert>

    <update id="updateAsqChat" parameterType="AsqChat">
        update asq_chat
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="fromId != null">from_id = #{fromId},</if>
            <if test="content != null">content = #{content},</if>
            <if test="time != null">time = #{time},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAsqChatById" parameterType="Long">
        delete
        from asq_chat
        where id = #{id}
    </delete>

    <delete id="deleteAsqChatByIds" parameterType="String">
        delete from asq_chat where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
